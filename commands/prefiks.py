from io import BytesIO

import requests
from PIL import Image, ImageEnhance
from vk_api import VkUpload
from vkbottle.user import Message, UserLabeler

from config import vk
from models import User
from utils import edit_message
from validators import MyPref

bl = UserLabeler()
bl.vbml_ignore_case = True


@bl.message(MyPref(), text=['<q> !–ø—Ä–µ—Ñ–∏–∫—Å—ã', '<q> –ø—Ä–µ—Ñ–∏–∫—Å—ã'])
async def greeting(message: Message):
    user = await User.get(vkontakte_id=message.from_id)
    text = f'–ü—Ä–µ—Ñ–∏–∫—Å—ã:\n\n' \
           f'–ö–æ–º–∞–Ω–¥—ã: {user.prefix_commands}\n' \
           f'–°–∫—Ä–∏–ø—Ç—ã: {user.prefix_scripts}\n' \
           f'–õ—é–∫—Å: {user.pref_luxury}\n' \
           f'–ü–æ–≤—Ç–æ—Ä—è–ª–∫–∞: {user.prefix_repeats}'
    await edit_message(message, text)


@bl.message(MyPref(), text='<q> !–ø—Ä–µ—Ñ–∏–∫—Å –∫–æ–º–∞–Ω–¥—ã <pref>')
async def greeting(message: Message, pref: str):
    user = await User.get(vkontakte_id=message.from_id)
    user.prefix_commands = pref
    await user.save()
    text = '‚úÖ –ü—Ä–µ—Ñ–∏–∫—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.'
    await edit_message(message, text)


@bl.message(MyPref(), text='<q> !–ø—Ä–µ—Ñ–∏–∫—Å –ª—é–∫—Å <pref>')
async def greeting(message: Message, pref: str):
    user = await User.get(vkontakte_id=message.from_id)
    user.pref_luxury = pref
    await user.save()
    text = '‚úÖ –ü—Ä–µ—Ñ–∏–∫—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.'
    await edit_message(message, text)


@bl.message(MyPref(), text='<q> !–ø—Ä–µ—Ñ–∏–∫—Å —Å–∫—Ä–∏–ø—Ç—ã <pref>')
async def greeting(message: Message, pref: str):
    user = await User.get(vkontakte_id=message.from_id)
    user.prefix_scripts = pref
    await user.save()
    text = '‚úÖ –ü—Ä–µ—Ñ–∏–∫—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.'
    await edit_message(message, text)


@bl.message(MyPref(), text='<q> !–ø—Ä–µ—Ñ–∏–∫—Å –ø–æ–≤—Ç–æ—Ä—è–ª–∫–∞ <pref>')
async def greeting(message: Message, pref: str):
    user = await User.get(vkontakte_id=message.from_id)
    user.prefix_repeats = pref
    await user.save()
    text = '‚úÖ –ü—Ä–µ—Ñ–∏–∫—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.'
    await edit_message(message, text)


@bl.message(MyPref(), text='<q> –ª–∏–Ω–∏–∏')
async def greeting(message: Message):
    print(message)

    if not message.attachments:
        await edit_message(message, 'üí¢ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞.')
        return

    photo = BytesIO(requests.get(message.attachments[0].photo.sizes[-1].url).content)
    width = 1000
    img = Image.open(photo)
    lines = Image.open('watermark.png')
    ratio = (width / float(img.size[0]))
    height = int((float(img.size[1]) * float(ratio)))
    img = img.resize((width, height), Image.ANTIALIAS)
    img.paste(lines, (0, 0), lines)
    img = ImageEnhance.Brightness(img)
    img = img.enhance(1.5)
    image_handle = BytesIO()
    img.save(image_handle, "PNG")
    image_handle.seek(0)
    upload = VkUpload(vk)
    photo_vk = upload.photo_messages(image_handle, peer_id=message.peer_id)
    atts = "photo{}_{}_{}".format(photo_vk[0]["owner_id"], photo_vk[0]["id"], photo_vk[0]["access_key"])
    await edit_message(message, text="‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–ª —Ñ–æ—Ç–æ—á–∫—É.\n–î–µ—Ä–∂–∏.", att=atts)
    img.close()
    lines.close()
